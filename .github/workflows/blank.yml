# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Download & Extract
        # You may pin to the exact commit or the version.
        # uses: gamedev-thingy/Download-Extract@20063b5f6b2b847425c9e3ff02830b19bcb66d70
        uses: gamedev-thingy/Download-Extract@done
        with:
          # The URL to download from
          url: https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-win64-gpl-shared.zip
          # Where the files will be extracted to
          destination: .
          # Name of the downloaded ZIP file
          ZIPname: ffmpeg-master-latest-win64-gpl-shared
          
      - name: Setup NuGet.exe for use with actions
        # You may pin to the exact commit or the version.
        # uses: NuGet/setup-nuget@296fd3ccf8528660c91106efefe2364482f86d6f
        uses: NuGet/setup-nuget@v1.2.0
        with:
          # NuGet version to install. Can be `latest`, `preview`, a concrete version like `5.3.1`, or a semver range specifier like `5.x`.
          nuget-version: latest
          # NuGet API Key to configure.
          nuget-api-key: ${{ secrets.NUGET_KEY }}
        
      # Runs a set of commands using the runners shell
      - name: Update version
        run: |
              $Folder = "ffmpeg-master-latest-win64-gpl-shared"
              $Datetime = Get-Date -Format "yyyyMMdd"
              $Version = $Datetime + "1.0"
              $Filename = "FFmpeg.GPL.nuspec"
              $NewFileName = "FFmpeg.GPL-" + $Version + ".nuspec"
              $Oldvalue = "$version"
              $content = get-content $Filename
              foreach($line in $content) {
                $liner=$line.Replace($Oldvalue, $Version)
                Add-content $NewFilename -Value $line
              }
              Get-ChildItem ./ -File | Copy-Item -Destination $Folder -Confirm -Force
              ls
              cd $Folder
              nuget pack $NewFileName
              ls
