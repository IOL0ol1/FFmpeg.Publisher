# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:

  # 1:00 everyday
  schedule:
    - cron: '00 1 * * *'
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
 
      - name: Setup NuGet.exe for use with actions
        # You may pin to the exact commit or the version.
        # uses: NuGet/setup-nuget@296fd3ccf8528660c91106efefe2364482f86d6f
        uses: NuGet/setup-nuget@v1.2.0
        with:
          # NuGet version to install. Can be `latest`, `preview`, a concrete version like `5.3.1`, or a semver range specifier like `5.x`.
          nuget-version: latest
          # NuGet API Key to configure.
          nuget-api-key: ${{secrets.NUGET_KEY}}
        
      # Runs a set of commands using the runners shell
      - name: Pack & Push GPL nuget
        shell: pwsh
        env: 
            NUGET_KEY: ${{secrets.NUGET_KEY}} 
        run: |
            cd ../FFmpeg
            $folder = "ffmpeg-master-latest-win64-gpl-shared"
            $zipFile = "./" + $folder + ".zip"
            Invoke-WebRequest -Uri "https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-win64-gpl-shared.zip" -OutFile $zipFile
            Expand-Archive -Path $zipFile -DestinationPath ./ -Force
            Remove-Item $zipFile -Force
            
            $id = "FFmpeg.GPL"
            $version = (Get-Date -Format "yyyyMMdd") + ".1.0"
            $srcfile = "FFmpeg.targets"
            $dstfile = $id + ".targets"
            Copy-Item $srcfile -Destination ($folder + "/" + $dstfile) -Force
            $srcfile = "FFmpeg.nuspec"
            $dstfile = $id + "." + $version  + ".nuspec"
            $dstpack = $id + "." + $version  + ".nupkg"
            $content = get-content $srcfile
            foreach($line in $content) {
              $dstline = $line.Replace('$version', $version).Replace('$id', $id)
              Add-content ($folder + "/" + $dstfile) -Value $dstline
            }
            Get-ChildItem ./ -File | Copy-Item -Destination $folder -Force
            cd $folder
            nuget pack $dstfile
            nuget push $dstpack -Source https://api.nuget.org/v3/index.json -ApiKey '"' + $env:NUGET_KEY + '"'

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.2
        with: 
          # A file, directory or wildcard pattern that describes what to upload
          path: FFmpeg/ffmpeg-master-latest-win64-gpl-shared/*.nupkg

      # Runs a set of commands using the runners shell
      - name: Pack & Push LGPL nuget
        shell: pwsh
        env: 
            NUGET_KEY: ${{ secrets.NUGET_KEY }}
        run: |
            cd FFmpeg
            $folder = "ffmpeg-master-latest-win64-lgpl-shared"
            $zipFile = "./" + $folder + ".zip"
            Invoke-WebRequest -Uri "https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-win64-lgpl-shared.zip" -OutFile $zipFile
            Expand-Archive -Path $zipFile -DestinationPath ./ -Force
            Remove-Item $zipFile -Force
            
            $id = "FFmpeg.LGPL"
            $version = (Get-Date -Format "yyyyMMdd") + ".1.0"
            $srcfile = "FFmpeg.targets"
            $dstfile = $id + ".targets"
            Copy-Item $srcfile -Destination ($folder + "/" + $dstfile) -Force
            $srcfile = "FFmpeg.nuspec"
            $dstfile = $id + "." + $version  + ".nuspec"
                     $dstpack = $id + "." + $version  + ".nupkg"
            $content = get-content $srcfile
            foreach($line in $content) {
              $dstline = $line.Replace('$version', $version).Replace('$id', $id)
              Add-content ($folder + "/" + $dstfile) -Value $dstline
            }
            Get-ChildItem ./ -File | Copy-Item -Destination $folder -Force
            cd $folder
            nuget pack $dstfile
            nuget push $dstpack -Source https://api.nuget.org/v3/index.json -ApiKey '"' + $env:NUGET_KEY + '"'

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.2
        with: 
          # A file, directory or wildcard pattern that describes what to upload
          path: FFmpeg/ffmpeg-master-latest-win64-lgpl-shared/*.nupkg
  
              
